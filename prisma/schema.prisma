// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Blogposts {
  id              Int           @id @default(autoincrement())
  title           String?       @db.VarChar(150)
  slug            String
  metaDescription String
  excerpt         String
  content         String
  banner          String        @db.VarChar(255)
  banneralt       String        @db.VarChar(255)
  minuteRead      Int           @default(1) @db.SmallInt
  featured        Boolean       @default(false)
  topPick         Boolean       @default(false)
  date            DateTime      @db.Timestamptz(0)
  //
  created_at      DateTime      @default(now())
  published_at    DateTime      @db.Timestamptz(3)
  upadted_at      DateTime      @updatedAt
  published       Boolean       @default(false)
  // relations
  author          Author        @relation(fields: [authorId], references: [id])
  authorId        String
  TagsToPosts     TagsToPosts[]
}

model Author {
  id        String      @id @default(uuid())
  firstname String      @db.VarChar(50)
  lastname  String      @db.VarChar(50)
  username  String      @db.VarChar(20)
  about     String      @db.VarChar(200)
  dp        String
  dpalt     String
  email     String?     @db.VarChar(50)
  phone     String?     @db.VarChar(15)
  facebook  String?     @db.VarChar(15)
  twitter   String?     @db.VarChar(15)
  linkedin  String?     @db.VarChar(15)
  behance   String?     @db.VarChar(15)
  github    String?     @db.VarChar(15)
  instagram String?     @db.VarChar(15)
  pintrest  String?     @db.VarChar(15)
  a365px    String?     @db.VarChar(15)
  // relations
  Blogposts Blogposts[]
}

model Tags {
  id              Int           @id @default(autoincrement())
  tagname         String        @db.VarChar(40)
  color           String?       @db.VarChar(40)
  metaDescription String?       @db.VarChar(40)
  ogimg           String?       @db.VarChar(250)
  ogalt           String        @db.VarChar(30)
  // relations
  TagsToPosts     TagsToPosts[]
}

model TagsToPosts {
  id          Int       @id @default(autoincrement())
  blogposts   Blogposts @relation(fields: [blogpostsId], references: [id])
  blogpostsId Int
  tags        Tags      @relation(fields: [tagsId], references: [id])
  tagsId      Int
  // createdAt
  createdAt   DateTime  @default(now()) @db.Timestamptz(3)
}
